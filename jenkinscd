pipeline{
    parameters{
        choice(name: 'action', choices: 'create\ndestroy', description: 'this will create or destroy the helm chart')
        string(name: 'clustername', defaultValue: 'devcluster', description: 'here you can choose the cluster name')
        string(name: 'chartname', defaultValue: 'jenkins', description: 'here you can choose the chart name')
        string(name: 'reponame', defaultValue: 'bitnami', description: 'here you can choose thr repo name')
        string(name: 'releasename', defaultValue: 'release1', description: 'here you can specify the release name')
    }
    agent{
        node{
            label "${clustername}"
        }
    }
    stages{
        stage('helm install'){
            when { expression { params.action == 'create'}}
            steps{
                script{
                    def apply = false
                    try{
                        input message: 'please confirm to apply the chart the on the cluster', ok: 'ready to apply'
                        apply = true
                    }
                    catch(err){
                        apply = false
                        CurrentBuild.result='UNSTABLE'
                    }
                    if(apply){
                       sh "helm repo update ${reponame}"
                       sh "helm install ${releasename} ${reponame}/${chartname}"
                    }   
                }
            }
        }
        stage('helm uninstall'){
            when { expression { params.action == 'destroy'}}
            steps{
                script{
                    def apply = false
                    try{
                        input message: 'are you sure do you want to uninstall the chart?', ok: 'confirm to delete'
                        apply = true
                    }
                    catch(err){
                        apply = false
                        CurrentBuild.result="UNSTABLE"
                    }
                    if(apply){
                       sh "helm uninstall ${releasename}"
                    }   
                }
            }
        }
    }
}